# Generated by Django 4.2.3 on 2023-07-17 15:33

import Apis.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(blank=True, default='', max_length=254, unique=True)),
                ('nombres', models.CharField(max_length=255)),
                ('apellidos', models.CharField(max_length=255)),
                ('dni', models.CharField(max_length=8, unique=True)),
                ('telefono', models.CharField(max_length=9)),
                ('rol', models.CharField(choices=[('recepcionista', 'recepcionista'), ('gerente', 'gerente')], default='recepcionista', max_length=15)),
                ('turno', models.CharField(choices=[('mañana', 'mañana'), ('tarde', 'tarde'), ('noche', 'noche'), ('finesSemana', 'finesSemana')], max_length=15)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'administrador',
                'verbose_name_plural': 'administradores',
            },
            managers=[
                ('objects', Apis.models.CustomUserManager()),
            ],
        ),
    ]
